//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;
using System.Text;

namespace ErysDownloader
{
    public abstract class HttpRequest
    {
        public virtual string UserAgent
        {
            get;
            set;
        }

        public virtual IChannel Channel
        {
            get;
            set;
        }

        public virtual Request Request
        {
            get;
            set;
        }

        public HttpRequest()
        {
            UserAgent = "User-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0";
        }

        public virtual Response Execute(Uri url, IEnumerable<string> requestHeader)
        {
            Channel.Url = Channel.Url ?? url;


            if (Request == null || !Request.IsConnected/*(Request != null && Request.IsConnected)*/)
            {
                Request = new Request() { Session = ConnectChannel(Channel.Url.Host, (int)Channel.Url.Port) };

                Request.RequestHeader = new Dictionary<string, string>();

                if (!string.IsNullOrWhiteSpace(UserAgent))
                {
                    requestHeader = requestHeader.Concat(new[] { UserAgent });
                }

                foreach (var header in requestHeader)
                {
                    var split = header.Split(new char[] { ':' }, 2);
                    Request.RequestHeader[split[0]] = split[1];
                }
            }

            Request.Url = url;


            var response = Channel.SendRequest(Request);

            //if response
            //Request = request;
            //Request.IsConnected = false;

            return response;

        }

        private System.IO.Stream ConnectChannel(string ip, int port)
        {
            var host = Channel.Url;// new Uri(string.Format("http://{0}:{1}", Channel.Host, Channel.Port));

            var socket = new TcpClient(host.DnsSafeHost, host.Port);
            socket.ReceiveTimeout = 30000;

            //if (!socket.Connected) return false;

            return socket.GetStream();
        }

    }

}